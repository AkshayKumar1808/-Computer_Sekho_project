// <auto-generated />
using System;
using ComputerSeekho.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputerSeekho.Migrations
{
    [DbContext(typeof(AppdbContext))]
    [Migration("20240820181845_cm00")]
    partial class cm00
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComputerSeekho.Models.AdminEnquiry", b =>
                {
                    b.Property<int>("EnquiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnquiryId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AlternateMobile")
                        .HasColumnType("bigint");

                    b.Property<int?>("Cid")
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnquirerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnquirerQuery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EnquiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FollowUpDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("Mobile")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<int?>("Sid")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnquiryId");

                    b.ToTable("AdminEnquiry");
                });

            modelBuilder.Entity("ComputerSeekho.Models.AdminLogin", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sid")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.ToTable("AdminLogins");
                });

            modelBuilder.Entity("ComputerSeekho.Models.AlbumMaster", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("AlbumId");

                    b.ToTable("AlbumMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Announcement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnouncementId"));

                    b.Property<DateTime>("AnnouncementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnnouncementText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isValid")
                        .HasColumnType("bit");

                    b.HasKey("AnnouncementId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("ComputerSeekho.Models.BatchMaster", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<DateTime?>("BatchEndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("BatchIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("BatchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BatchStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Cid")
                        .HasColumnType("int");

                    b.Property<int>("CourseFees")
                        .HasColumnType("int");

                    b.HasKey("BatchId");

                    b.ToTable("BatchMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseDuration")
                        .HasColumnType("int");

                    b.Property<bool>("CourseIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseSyllabus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Followup", b =>
                {
                    b.Property<int>("FollowupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FollowupId"));

                    b.Property<int?>("EId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FollowupDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FollowupMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("StId")
                        .HasColumnType("int");

                    b.HasKey("FollowupId");

                    b.ToTable("Followups");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Image", b =>
                {
                    b.Property<int>("PathId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PathId"));

                    b.Property<int>("Aid")
                        .HasColumnType("int");

                    b.Property<string>("PathName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PathId");

                    b.ToTable("ImageMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ComputerSeekho.Models.PlacementMaster", b =>
                {
                    b.Property<int>("PlacementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlacementId"));

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<int?>("CId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SId")
                        .HasColumnType("int");

                    b.HasKey("PlacementId");

                    b.ToTable("PlacementMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.StaffMaster", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Staffemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Staffmobile")
                        .HasColumnType("bigint");

                    b.Property<string>("Staffname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staffrole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("StaffMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.StudentMaster", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AlternateNum")
                        .HasColumnType("bigint");

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<int?>("CId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MobileNum")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentQualification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.tempEnquiry", b =>
                {
                    b.Property<long>("EnqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EnqId"));

                    b.Property<string>("AltPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enquirytext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnqId");

                    b.ToTable("tempEnquiry");
                });
#pragma warning restore 612, 618
        }
    }
}
